{"ast":null,"code":"import _slicedToArray from\"D:/product/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import{useTheme}from\"@material-ui/core/styles\";import moment from\"moment\";import Highcharts from\"highcharts\";import HighchartsReact from\"highcharts-react-official\";import{jsx as _jsx}from\"react/jsx-runtime\";function useOptions(theme,data,secondData){return{chart:{height:\"250px\",type:\"column\"},xAxis:{type:\"datetime\"},title:null,series:[{name:\"Deposits\",data:data,color:theme.palette.primary.main},{name:\"Withdrawls\",data:secondData,color:theme.palette.secondary.main}],plotOptions:{series:{marker:{enabled:false}}}};}export default function Chart(){var data=[{name:\"Total\",value:2000000},{name:\"onhold\",value:1500000},{name:\"running\",value:250000},{name:\"rejected\",value:400000}];var theme=useTheme();var chartData=Object.values(data).map(function(_ref){var amount=_ref.amount,date=_ref.date;return[date,amount];}).sort(function(a,b){return moment(a[0]).isBefore(b[0]);});var income=chartData.filter(function(_ref2){var _ref3=_slicedToArray(_ref2,2),date=_ref3[0],amount=_ref3[1];return amount>0;});var expense=chartData.filter(function(_ref4){var _ref5=_slicedToArray(_ref4,2),date=_ref5[0],amount=_ref5[1];return amount<0;});var options=useOptions(theme,income,expense);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(HighchartsReact,{highcharts:Highcharts,options:options})});}","map":{"version":3,"sources":["D:/product/src/components/pages/Dashboard/Chart.js"],"names":["React","useContext","useTheme","moment","Highcharts","HighchartsReact","useOptions","theme","data","secondData","chart","height","type","xAxis","title","series","name","color","palette","primary","main","secondary","plotOptions","marker","enabled","Chart","value","chartData","Object","values","map","amount","date","sort","a","b","isBefore","income","filter","expense","options"],"mappings":"6FACA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAGA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,C,2CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2BC,IAA3B,CAAiCC,UAAjC,CAA6C,CAC3C,MAAO,CACLC,KAAK,CAAE,CACLC,MAAM,CAAE,OADH,CAELC,IAAI,CAAE,QAFD,CADF,CAKLC,KAAK,CAAE,CACLD,IAAI,CAAE,UADD,CALF,CASLE,KAAK,CAAE,IATF,CAULC,MAAM,CAAE,CACN,CACEC,IAAI,CAAE,UADR,CAEER,IAAI,CAAJA,IAFF,CAGES,KAAK,CAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,IAH/B,CADM,CAMN,CACEJ,IAAI,CAAE,YADR,CAEER,IAAI,CAAEC,UAFR,CAGEQ,KAAK,CAAEV,KAAK,CAACW,OAAN,CAAcG,SAAd,CAAwBD,IAHjC,CANM,CAVH,CAsBLE,WAAW,CAAE,CACXP,MAAM,CAAE,CACNQ,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CADF,CADG,CAtBR,CAAP,CA8BD,CAED,cAAe,SAASC,CAAAA,KAAT,EAAiB,CAG9B,GAAMjB,CAAAA,IAAI,CAAG,CACX,CAAEQ,IAAI,CAAE,OAAR,CAAiBU,KAAK,CAAC,OAAvB,CADW,CAEX,CAAEV,IAAI,CAAE,QAAR,CAAkBU,KAAK,CAAC,OAAxB,CAFW,CAGX,CAAEV,IAAI,CAAE,SAAR,CAAmBU,KAAK,CAAC,MAAzB,CAHW,CAIX,CAAEV,IAAI,CAAE,UAAR,CAAoBU,KAAK,CAAC,MAA1B,CAJW,CAAb,CAWA,GAAMnB,CAAAA,KAAK,CAAGL,QAAQ,EAAtB,CACA,GAAMyB,CAAAA,SAAS,CAAGC,MAAM,CAACC,MAAP,CAAcrB,IAAd,EACfsB,GADe,CACX,kBAAGC,CAAAA,MAAH,MAAGA,MAAH,CAAWC,IAAX,MAAWA,IAAX,OAAsB,CAACA,IAAD,CAAOD,MAAP,CAAtB,EADW,EAEfE,IAFe,CAEV,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACd,MAAOhC,CAAAA,MAAM,CAAC+B,CAAC,CAAC,CAAD,CAAF,CAAN,CAAaE,QAAb,CAAsBD,CAAC,CAAC,CAAD,CAAvB,CAAP,CACD,CAJe,CAAlB,CAKA,GAAIE,CAAAA,MAAM,CAAGV,SAAS,CAACW,MAAV,CAAiB,kDAAEN,IAAF,UAAQD,MAAR,gBAAoBA,CAAAA,MAAM,CAAG,CAA7B,EAAjB,CAAb,CACA,GAAIQ,CAAAA,OAAO,CAAGZ,SAAS,CAACW,MAAV,CAAiB,kDAAEN,IAAF,UAAQD,MAAR,gBAAoBA,CAAAA,MAAM,CAAG,CAA7B,EAAjB,CAAd,CACA,GAAMS,CAAAA,OAAO,CAAGlC,UAAU,CAACC,KAAD,CAAQ8B,MAAR,CAAgBE,OAAhB,CAA1B,CACA,mBACE,KAAC,KAAD,CAAO,QAAP,wBAEE,KAAC,eAAD,EAAiB,UAAU,CAAEnC,UAA7B,CAAyC,OAAO,CAAEoC,OAAlD,EAFF,EADF,CAMD","sourcesContent":["\r\nimport React, { useContext } from \"react\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport moment from \"moment\";\r\n\r\n\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nfunction useOptions(theme, data, secondData) {\r\n  return {\r\n    chart: {\r\n      height: \"250px\",\r\n      type: \"column\",\r\n    },\r\n    xAxis: {\r\n      type: \"datetime\",\r\n    },\r\n\r\n    title: null,\r\n    series: [\r\n      {\r\n        name: \"Deposits\",\r\n        data,\r\n        color: theme.palette.primary.main,\r\n      },\r\n      {\r\n        name: \"Withdrawls\",\r\n        data: secondData,\r\n        color: theme.palette.secondary.main,\r\n      },\r\n    ],\r\n    plotOptions: {\r\n      series: {\r\n        marker: {\r\n          enabled: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default function Chart() {\r\n\r\n\r\n  const data = [\r\n    { name: \"Total\", value:2000000},\r\n    { name: \"onhold\", value:1500000},\r\n    { name: \"running\", value:250000},\r\n    { name: \"rejected\", value:400000},\r\n\r\n  ];\r\n\r\n\r\n\r\n\r\n  const theme = useTheme();\r\n  const chartData = Object.values(data)\r\n    .map(({ amount, date }) => [date, amount])\r\n    .sort((a, b) => {\r\n      return moment(a[0]).isBefore(b[0]);\r\n    });\r\n  let income = chartData.filter(([date, amount]) => amount > 0);\r\n  let expense = chartData.filter(([date, amount]) => amount < 0);\r\n  const options = useOptions(theme, income, expense);\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Title>Today</Title> */}\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}