{"ast":null,"code":"// import React, { useEffect, useState, useMemo } from \"react\";\n// import Pagination from \"react-bootstrap/Pagination\";\n// const PaginationComponent = ({\n//     total = 0,\n//     itemsPerPage = 10,\n//     currentPage = 1,\n//     onPageChange\n// }) => {\n//     const [totalPages, setTotalPages] = useState(0);\n//     useEffect(() => {\n//         if (total > 0 && itemsPerPage > 0)\n//             setTotalPages(Math.ceil(total / itemsPerPage));\n//     }, [total, itemsPerPage]);\n//     const paginationItems = useMemo(() => {\n//         const pages = [];\n//         for (let i = 1; i <= totalPages; i++) {\n//             pages.push(\n//                 <Pagination.Item\n//                     key={i}\n//                     active={i === currentPage}\n//                     onClick={() => onPageChange(i)}\n//                 >\n//                     {i}\n//                 </Pagination.Item>\n//             );\n//         }\n//         return pages;\n//     }, [totalPages, currentPage]);\n//     if (totalPages === 0) return null;\n//     return (\n//         <Pagination>\n//             <Pagination.Prev\n//                 onClick={() => onPageChange(currentPage - 1)}\n//                 disabled={currentPage === 1}\n//             />\n//             {paginationItems}\n//             <Pagination.Next\n//                 onClick={() => onPageChange(currentPage + 1)}\n//                 disabled={currentPage === totalPages}\n//             />\n//         </Pagination>\n//     );\n// };\n// export default PaginationComponent;","map":{"version":3,"sources":["D:/product/src/components/Datatable/Pagination.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState, useMemo } from \"react\";\r\n// import Pagination from \"react-bootstrap/Pagination\";\r\n\r\n// const PaginationComponent = ({\r\n//     total = 0,\r\n//     itemsPerPage = 10,\r\n//     currentPage = 1,\r\n//     onPageChange\r\n// }) => {\r\n//     const [totalPages, setTotalPages] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         if (total > 0 && itemsPerPage > 0)\r\n//             setTotalPages(Math.ceil(total / itemsPerPage));\r\n//     }, [total, itemsPerPage]);\r\n\r\n//     const paginationItems = useMemo(() => {\r\n//         const pages = [];\r\n\r\n//         for (let i = 1; i <= totalPages; i++) {\r\n//             pages.push(\r\n//                 <Pagination.Item\r\n//                     key={i}\r\n//                     active={i === currentPage}\r\n//                     onClick={() => onPageChange(i)}\r\n//                 >\r\n//                     {i}\r\n//                 </Pagination.Item>\r\n//             );\r\n//         }\r\n\r\n//         return pages;\r\n//     }, [totalPages, currentPage]);\r\n\r\n//     if (totalPages === 0) return null;\r\n\r\n//     return (\r\n//         <Pagination>\r\n//             <Pagination.Prev\r\n//                 onClick={() => onPageChange(currentPage - 1)}\r\n//                 disabled={currentPage === 1}\r\n//             />\r\n//             {paginationItems}\r\n//             <Pagination.Next\r\n//                 onClick={() => onPageChange(currentPage + 1)}\r\n//                 disabled={currentPage === totalPages}\r\n//             />\r\n//         </Pagination>\r\n//     );\r\n// };\r\n\r\n// export default PaginationComponent;"]},"metadata":{},"sourceType":"module"}